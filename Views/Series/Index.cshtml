@model PagedList.IPagedList<Filmweb.Models.Series>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Seriale";
}

<h2>Seriale</h2>

<p>
    @Html.ActionLink("Stwórz nowy ", "Create")
</p>
@using (Html.BeginForm("Index", "Movies", FormMethod.Get))
{
    <p>
        Szukanie po tytule: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Szukaj " />
    </p>
}

<ul class="actors">

    @foreach (var item in Model)
    {
        <li>
            <<a href="@Url.Action("Details"+"/"+item.ID, "Series")">
                <img class="actor-image" src="~/Obrazki/@item.Obrazek">
                <a />
                <div class="a-1">
                    @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                    @Html.DisplayFor(modelItem => item.Name)
                </div>
                <div class="a-2">
                    Reżyser:   @Html.DisplayFor(modelItem => item.Director)
                </div>
                <div class="a-3">
                    Długość:   @Html.DisplayFor(modelItem => item.Length)
                </div>
                <div class="a-4">
                    Numer sezonu:  @Html.DisplayFor(modelItem => item.NumberOfSeasons)
                </div>
                <div class="a-5">
                    Numer odcinka:  @Html.DisplayFor(modelItem => item.NumberOfEpisode)
                </div>
                <div class="a-6">
                    @Html.ActionLink("Ocena", "Index", new { sortOrder = ViewBag.NameSortParm })
                    @Html.DisplayFor(modelItem => item.Rate)
                </div>

                <div>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </div>

        </li>
    }
</ul>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


